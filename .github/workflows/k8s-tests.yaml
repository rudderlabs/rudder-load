name: Execute tests on kubernetes
on:
  workflow_dispatch:
    inputs:
      test_file:
        description: "Test file to run (e.g., constant_load.test.yaml)"
        required: true
        type: string
        default: "constant_load.test.yaml"
      k8s_namespace:
        description: "Kubernetes namespace to run the test in"
        required: true
        type: string
        default: "rudder-load"
      sources:
        description: "Source write keys to be used for the test as a comma separated string"
        required: true
        type: string
      http_endpoint:
        description: "HTTP endpoint to be used for the test"
        required: true
        type: string

jobs:
  run-k8s-test:
    name: Run Kubernetes Test
    runs-on: [self-hosted, Linux, ARM64]
    permissions:
      id-token: write  
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: GitHubActionsEKS
          aws-region: us-east-1
      
      - name: Update Kubeconfig
        run: aws eks update-kubeconfig --name staging --region us-east-1
      
      # üê≥ Set up kubectl
      - uses: azure/setup-kubectl@v4
        id: install-kubectl

      # üî® Set up Helm
      - name: Install Helm
        uses: azure/setup-helm@v4
        id: install-helm

      # üß™ View versions
      - name: Verify tools
        run: |
          kubectl version --client
          helm version
      
      # - name: Apply RBAC
      #   run: kubectl apply -f artifacts/kubectl/rbac.yaml -n ${{ github.event.inputs.k8s_namespace }}

      - name: Create Environment File
        run: sh scripts/create-env.sh
        env:
          SOURCES: ${{ github.event.inputs.sources || secrets.SOURCES }}
          HTTP_ENDPOINT: ${{ github.event.inputs.http_endpoint || secrets.HTTP_ENDPOINT }}

      - name: Run the test
        run: |
          go build -o load-runner ./cmd/load-runner
          ./load-runner -t tests/${{ github.event.inputs.test_file }} -n ${{ github.event.inputs.k8s_namespace }}
      
      # - name: Delete RBAC
      #   run: kubectl delete -f artifacts/kubectl/rbac.yaml -n ${{ github.event.inputs.k8s_namespace }}

      - name: Archive metrics
        uses: actions/upload-artifact@v4
        with:
          name: metrics
          path: metrics_reports/
      
      - name: Post a message in a channel
        uses: slackapi/slack-github-action@v2.0.0
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Load test completed!* ‚úÖ"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Scenario*: ${{ github.event.inputs.test_file }}\n*Namespace*: ${{ github.event.inputs.k8s_namespace }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Metrics reports are available as artifacts*:\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View run and download artifacts>"
                  }
                }
              ]
            }
